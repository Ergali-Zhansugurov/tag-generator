from sentence_transformers import SentenceTransformer
import numpy as np

# –ó–∞–≥—Ä—É–∂–∞–µ–º –º–æ–¥–µ–ª—å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ç–µ–∫—Å—Ç–∞–º–∏
model = SentenceTransformer("all-MiniLM-L6-v2")

# –ë–∞–∑–∞ –∫–Ω–∏–≥ –∏ –∏—Ö –æ—Ç–∑—ã–≤–æ–≤
books = {
    "–í–æ–π–Ω–∞ –∏ –º–∏—Ä ‚Äì –õ.–ù. –¢–æ–ª—Å—Ç–æ–π": [
        "–ì–ª—É–±–æ–∫–∏–π —Ä–æ–º–∞–Ω –æ –∂–∏–∑–Ω–∏ –∏ –≤–æ–π–Ω–µ.",
        "–°–ª–æ–∂–Ω–æ, –Ω–æ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ.",
        "–ü–µ—Ä—Å–æ–Ω–∞–∂–∏ –±—É–¥—Ç–æ –∂–∏–≤—ã–µ."
    ],
    "–ì–∞—Ä—Ä–∏ –ü–æ—Ç—Ç–µ—Ä –∏ —Ñ–∏–ª–æ—Å–æ—Ñ—Å–∫–∏–π –∫–∞–º–µ–Ω—å ‚Äì –î–∂.–ö. –†–æ—É–ª–∏–Ω–≥": [
        "–í–æ–ª—à–µ–±–Ω–∞—è –∏—Å—Ç–æ—Ä–∏—è –¥–ª—è –≤—Å–µ—Ö –≤–æ–∑—Ä–∞—Å—Ç–æ–≤.",
        "–õ–µ–≥–∫–æ —á–∏—Ç–∞–µ—Ç—Å—è, –∑–∞—Ç—è–≥–∏–≤–∞–µ—Ç.",
        "–ù–∞—Å—Ç–æ—è—â–µ–µ –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏–µ!"
    ],
    "–ë—Ä–∞—Ç—å—è –ö–∞—Ä–∞–º–∞–∑–æ–≤—ã ‚Äì –§.–ú. –î–æ—Å—Ç–æ–µ–≤—Å–∫–∏–π": [
        "–°–ª–æ–∂–Ω—ã–µ —Ç–µ–º—ã, –≥–ª—É–±–∏–Ω–∞ —á–µ–ª–æ–≤–µ—á–µ—Å–∫–æ–π –ø—Ä–∏—Ä–æ–¥—ã, —Ñ–∏–ª–æ—Å–æ—Ñ—Å–∫–∏–µ —Ä–∞–∑–º—ã—à–ª–µ–Ω–∏—è –æ –≤–µ—Ä–µ, –º–æ—Ä–∞–ª–∏ –∏ —Å—É–¥—å–±–µ.",
        "–î–æ—Å—Ç–æ–µ–≤—Å–∫–∏–π –≥–µ–Ω–∏–∞–ª—å–Ω–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–µ –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã –ª—é–¥–µ–π."
    ],
    "451 –≥—Ä–∞–¥—É—Å –ø–æ –§–∞—Ä–µ–Ω–≥–µ–π—Ç—É ‚Äì –†—ç–π –ë—Ä—ç–¥–±–µ—Ä–∏": [
        "–î–∏—Å—Ç–æ–ø–∏—è, –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–∞—é—â–∞—è –æ–± –æ–ø–∞—Å–Ω–æ—Å—Ç—è—Ö —Ü–µ–Ω–∑—É—Ä—ã –∏ —Ä–∞–≤–Ω–æ–¥—É—à–∏—è –æ–±—â–µ—Å—Ç–≤–∞.",
        "–•–æ—Ç—è —Ä–æ–º–∞–Ω –Ω–∞–ø–∏—Å–∞–Ω –¥–∞–≤–Ω–æ, –æ–Ω –Ω–µ —Ç–µ—Ä—è–µ—Ç –∞–∫—Ç—É–∞–ª—å–Ω–æ—Å—Ç–∏."
    ],
    "–ü—Ä–µ—Å—Ç—É–ø–ª–µ–Ω–∏–µ –∏ –Ω–∞–∫–∞–∑–∞–Ω–∏–µ ‚Äì –§.–ú. –î–æ—Å—Ç–æ–µ–≤—Å–∫–∏–π": [
        "–û—á–µ–Ω—å –≥–ª—É–±–æ–∫–∞—è –∫–Ω–∏–≥–∞ –æ —Ç–µ—Ä–∑–∞–Ω–∏—è—Ö –¥—É—à–∏ –∏ –º–æ—Ä–∞–ª—å–Ω–æ–º –≤—ã–±–æ—Ä–µ.",
        "–ó–∞—Å—Ç–∞–≤–ª—è–µ—Ç –∑–∞–¥—É–º–∞—Ç—å—Å—è –æ –ø—Ä–∏—Ä–æ–¥–µ –ø—Ä–µ—Å—Ç—É–ø–ª–µ–Ω–∏—è –∏ –∏—Å–∫—É–ø–ª–µ–Ω–∏—è.",
        "–ú–µ—Å—Ç–∞–º–∏ —Ç—è–∂—ë–ª–∞—è, –Ω–æ –ø–æ—Å–ª–µ –ø—Ä–æ—á—Ç–µ–Ω–∏—è –¥–æ–ª–≥–æ –Ω–µ –æ—Ç–ø—É—Å–∫–∞–µ—Ç."
    ]
}


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–¥–±–æ—Ä–∞ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –∫–Ω–∏–≥ –ø–æ –æ—Ç–∑—ã–≤–∞–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
def recommend_books(user_reviews, top_n=3):
    user_vector = model.encode(user_reviews)
    scores = []

    for book, reviews in books.items():
        book_vector = model.encode(reviews)
        score = np.mean(np.dot(user_vector, book_vector.T))  # –°—Ä–µ–¥–Ω–µ–µ —Å—Ö–æ–¥—Å—Ç–≤–æ
        scores.append((book, score))

    scores.sort(key=lambda x: x[1], reverse=True)
    return [book for book, _ in scores[:top_n]]


# –ü—Ä–∏–º–µ—Ä –≤–≤–æ–¥–∞ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
user_reviews = [
    "–ú–Ω–µ –Ω—Ä–∞–≤–∏—Ç—Å—è –≥–ª—É–±–æ–∫–∏–π —Å–º—ã—Å–ª –∏ —Ñ–∏–ª–æ—Å–æ—Ñ–∏—è –∫–Ω–∏–≥–∏.",
    "–ò—Å—Ç–æ—Ä–∏—è –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —Å–ª–æ–∂–Ω–æ–π –∏ –∑–∞—Ç—Ä–∞–≥–∏–≤–∞—Ç—å –º–æ—Ä–∞–ª—å–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã.",
    "–í–∞–∂–Ω–æ, —á—Ç–æ–±—ã –±—ã–ª–∏ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–∏ –∏ –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã."
]

recommended_books = recommend_books(user_reviews)
print("üìñ –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–µ –∫–Ω–∏–≥–∏:")
for book in recommended_books:
    print(f"- {book}")

# –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
if __name__ == "__main__":
    recommended = recommended_books
from presentation.api.main import app
import uvicorn

if __name__ == "__main__":
    uvicorn.run(app, host="0.0.0.0", port=8000)